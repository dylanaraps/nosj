#!/usr/bin/env bash
#
# nosj - json parser in pure bash

tokenize() {
    while read -rn 1 char; do
        case $char in
            \{|\}|\[|\]|,)
                [[ $string == 1 ]] && tokens+=$char
                [[ $string != 1 ]] && tokens+=$'\n'$char$'\n'
            ;;

            :)
                [[ $string == 1 ]] && tokens+=:
                [[ $string != 1 ]] && tokens+=%%:::%%
            ;;

            [[:space:]])
                [[ $string == 1 ]] && tokens+=$char
            ;;

            \"|\')
                ((string=string==1?0:1))
            ;;

            *) tokens+=$char ;;
        esac
    done < "$1"

    mapfile -t tokens <<< "$tokens"
}

parse() {
    for ((i=0;i<${#tokens[@]};i++)) {
        case ${tokens[i]} in
            \{|\[)
                objects+=("${tokens[i-1]}")
            ;;

            \}|\])
                unset 'objects[-1]'
            ;;

            *"%%:::%%"*)
                key=${objects[*]//'%%:::%%'/.}${tokens[i]/'%%:::%%'*}
                key=${key//[^[a-zA-Z0-9.]/_}
                val=${tokens[i]/*'%%:::%%'}

                [[ $val ]] &&
                    declare -xg "nosj[$key]=${nosj[$key]:+${nosj[$key]},}$val"
            ;;
        esac

        unset key val
    }

    declare -p nosj
}

main() {
    declare -Axg nosj=()
    tokenize "${1:-/dev/stdin}"
    parse
}

IFS= main "$@"
