#!/usr/bin/env bash
#
# nosj -

tokenize() {
    while IFS= read -rn 1 char; do
        case $char in
            \{|\}|\[|\]|,)
                case $string in
                    1) tokens+=$char ;;
                    *) tokens+=$'\n'$char$'\n' ;;
                esac
            ;;

            \"|\')
                ((string=string == 1 ? 0 : 1))
            ;;

            :)
                case $string in
                    1) tokens+=: ;;
                    *) tokens+=%%:::%% ;;
                esac
            ;;

            ""|[[:space:]])
                [[ $string == 1 ]] &&
                    tokens+=$char
            ;;

            *) tokens+=$char ;;
        esac
    done < "$1"

    mapfile -t tokens <<< "$tokens"
}

parse() {
    for ((i=0;i<${#tokens[@]};i++)) {
        case ${tokens[i]} in
            \{|\[)
                objects+=("${tokens[i-1]}")
            ;;

            \}|\])
                unset 'objects[-1]'
            ;;

            *"%%:::%%"*)
                IFS=
                key=${objects[*]//'%%:::%%'/_}${tokens[i]/'%%:::%%'*}
                IFS=$old_ifs

                val=${tokens[i]/*'%%:::%%'}

                [[ $val ]] &&
                    json+=("${key//[^[a-zA-Z0-9]/_}+=('$val')")
            ;;

            "") ;;
        esac

        unset key val
    }

    declare -axg "${json[@]}"
    printf '%s\n' "${json[@]}" >&2
}

main() {
    [[ -f $1 ]] || {
        printf '%s\n' "File '$1' not found" >&2
        exit 1
    }

    old_ifs=$IFS
    tokenize "$1"
    parse
}

main "$@"
